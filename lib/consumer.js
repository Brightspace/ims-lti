// Generated by CoffeeScript 1.12.7
(function() {
  var Consumer, HMAC_SHA1, crypto, errors, exports, extensions,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  crypto = require('crypto');

  HMAC_SHA1 = require('./hmac-sha1');

  errors = require('./errors');

  extensions = require('./extensions');

  Consumer = (function() {
    function Consumer(consumer_key, consumer_secret) {
      this.encode_request = bind(this.encode_request, this);
      if (typeof consumer_key === 'undefined' || consumer_key === null) {
        throw new errors.ConsumerError('Must specify consumer_key');
      }
      if (typeof consumer_secret === 'undefined' || consumer_secret === null) {
        throw new errors.ConsumerError('Must specify consumer_secret');
      }
      this.consumer_key = consumer_key;
      this.consumer_secret = consumer_secret;
      this.signer = new HMAC_SHA1();
      this.body = {};
    }

    Consumer.prototype.encode_request = function(urlInfo, body) {
      var sig;
      body.oauth_nonce = crypto.randomBytes(Math.ceil(16)).toString('hex').slice(0, 32);
      body.oauth_consumer_key = this.consumer_key;
      body.oauth_signature_method = 'HMAC-SHA1';
      body.oauth_timestamp = Math.floor(new Date() / 1000);
      body.oauth_version = '1.0';
      body.oauth_callback = 'about:blank';
      sig = this.signer.build_signature(urlInfo, body, this.consumer_secret);
      body.oauth_signature = sig;
      return body;
    };

    return Consumer;

  })();

  exports = module.exports = Consumer;

}).call(this);
